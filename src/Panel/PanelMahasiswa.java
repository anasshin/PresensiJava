/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Panel;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import Config.KoneksiDB;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anas
 */
public class PanelMahasiswa extends javax.swing.JPanel {

    public Connection con;

    public PanelMahasiswa() {
        initComponents();

        con = KoneksiDB.getConnection();

        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableMahasiswa = new javax.swing.JTable();
        FieldNim = new javax.swing.JTextField();
        NIM = new javax.swing.JLabel();
        FieldNama = new javax.swing.JTextField();
        LabelNama = new javax.swing.JLabel();
        BtnTambah = new javax.swing.JButton();
        BtnEdit = new javax.swing.JButton();
        BtnHapus = new javax.swing.JButton();
        BtnSimpan = new javax.swing.JButton();

        tableMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null },
                        { null, null },
                        { null, null },
                        { null, null }
                },
                new String[] {
                        "NIM", "Nama Lengkap"
                }));
        jScrollPane1.setViewportView(tableMahasiswa);
        if (tableMahasiswa.getColumnModel().getColumnCount() > 0) {
            tableMahasiswa.getColumnModel().getColumn(0).setMinWidth(150);
            tableMahasiswa.getColumnModel().getColumn(0).setMaxWidth(150);
        }

        NIM.setText("NIM");

        LabelNama.setText("Nama");

        BtnTambah.setText("Tambah");
        BtnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTambahActionPerformed(evt);
            }
        });

        BtnEdit.setText("Edit");
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });

        BtnHapus.setText("Hapus");
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });

        BtnSimpan.setText("Simpan");
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(FieldNim)
                                                                        .addComponent(FieldNama))
                                                                .addContainerGap())
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(NIM)
                                                                        .addComponent(LabelNama))
                                                                .addGap(0, 0, Short.MAX_VALUE))))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                .createSequentialGroup()
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                                .createSequentialGroup()
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                        11, Short.MAX_VALUE)
                                                                .addComponent(BtnTambah)
                                                                .addGap(12, 12, 12)
                                                                .addComponent(BtnEdit))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                        12, Short.MAX_VALUE)
                                                                .addComponent(BtnHapus)
                                                                .addGap(12, 12, 12)
                                                                .addComponent(BtnSimpan)))
                                                .addGap(10, 10, 10)))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(NIM)
                                .addGap(7, 7, 7)
                                .addComponent(FieldNim, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LabelNama)
                                .addGap(7, 7, 7)
                                .addComponent(FieldNama, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(BtnTambah)
                                        .addComponent(BtnEdit))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(BtnHapus)
                                        .addComponent(BtnSimpan))
                                .addContainerGap(140, Short.MAX_VALUE)));
    }// </editor-fold>//GEN-END:initComponents

    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnHapusActionPerformed
        hapusData();
    }

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnSimpanActionPerformed
        simpanData();
        clearForm();
    }

    private void BtnTambahActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnTambahActionPerformed
        tambahData();
        clearForm();
    }

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnEditActionPerformed
        editData();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnEdit;
    private javax.swing.JButton BtnHapus;
    private javax.swing.JButton BtnSimpan;
    private javax.swing.JButton BtnTambah;
    private javax.swing.JTextField FieldNama;
    private javax.swing.JTextField FieldNim;
    private javax.swing.JLabel LabelNama;
    private javax.swing.JLabel NIM;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMahasiswa;
    // End of variables declaration//GEN-END:variables

    public void loadData() {
        DefaultTableModel model = (DefaultTableModel) tableMahasiswa.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT * FROM mahasiswa";
            try (PreparedStatement st = con.prepareStatement(sql)) {
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    String nim = rs.getString("NIM");
                    String nama = rs.getString("Nama");

                    model.addRow(new Object[] { nim, nama });
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to load data: " + e.getMessage());
        }
    }

    public void tambahData() {
        String nim = FieldNim.getText();
        String nama = FieldNama.getText();

        String sql = "INSERT INTO mahasiswa (NIM, Nama) VALUES (?, ?)";

        try {
            try (PreparedStatement st = con.prepareStatement(sql)) {
                st.setString(1, nim);
                st.setString(2, nama);

                st.executeUpdate();
            }

            loadData();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to add data: " + e.getMessage());
        }
    }

    public void editData() {
        int selectedRow = tableMahasiswa.getSelectedRow();
        if (selectedRow != -1) {
            String fnim = (String) tableMahasiswa.getValueAt(selectedRow, 0);
            String fnama = (String) tableMahasiswa.getValueAt(selectedRow, 1);
            FieldNim.setText(fnim);
            FieldNama.setText(fnama);
        }

    }

    public void simpanData() {
        try {
            String nim = FieldNim.getText();
            String nama = FieldNama.getText();
            String sql = "UPDATE mahasiswa SET Nama = ? WHERE NIM = ?";
            PreparedStatement st = con.prepareStatement(sql);
            st.setString(1, nama);
            st.setString(2, nim);
            st.executeUpdate();
            loadData();
        } catch (Exception e) {

        }
    }

    public void hapusData() {
        try {
            int selectedRow = tableMahasiswa.getSelectedRow();
            if (selectedRow != -1) {
                String nim = (String) tableMahasiswa.getValueAt(selectedRow, 0);
                String sql = "DELETE FROM mahasiswa WHERE NIM = ?";
                PreparedStatement st = con.prepareStatement(sql);
                st.setString(1, nim);
                st.executeUpdate();
                loadData();
            }
        } catch (Exception e) {

        }
    }

    public void clearForm() {
        FieldNim.setText("");
        FieldNama.setText("");
    }
}